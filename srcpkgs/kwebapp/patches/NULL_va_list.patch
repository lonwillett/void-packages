diff --git config.c config.c
index 16683a1..a9357c2 100644
--- config.c
+++ config.c
@@ -882,7 +882,7 @@ ort_config_msg(struct config *cfg, enum msgtype type,
 
 	if (NULL == fmt) {
 		ort_config_msgv(cfg, type, 
-			chan, er, pos, NULL, NULL);
+			chan, er, pos, NULL, ap);
 		return;
 	}
 
diff --git linker.c linker.c
index 33ca33d..c5cd929 100644
--- linker.c
+++ linker.c
@@ -65,16 +65,17 @@ gen_warnx(struct config *cfg,
 		va_end(ap);
 	} else
 		ort_config_msgv(cfg, MSGTYPE_WARN, 
-			channel, 0, pos, NULL, NULL);
+			channel, 0, pos, NULL, ap);
 }
 
 static void
 gen_err(struct config *cfg, const struct pos *pos)
 {
+	va_list	ap;
 	int	 er = errno;
 
 	ort_config_msgv(cfg, MSGTYPE_FATAL, 
-		channel, er, pos, NULL, NULL);
+		channel, er, pos, NULL, ap);
 }
 
 static void
@@ -90,7 +91,7 @@ gen_errx(struct config *cfg,
 		va_end(ap);
 	} else
 		ort_config_msgv(cfg, MSGTYPE_ERROR, 
-			channel, 0, pos, NULL, NULL);
+			channel, 0, pos, NULL, ap);
 }
 
 /*
diff --git parser.c parser.c
index 05a4cef..f9b75e9 100644
--- parser.c
+++ parser.c
@@ -341,12 +341,13 @@ parse_warnx(struct parse *p, const char *fmt, ...)
 		va_end(ap);
 	} else
 		ort_config_msgv(p->cfg, MSGTYPE_WARN, 
-			channel, 0, &pos, NULL, NULL);
+			channel, 0, &pos, NULL, ap);
 }
 
 static enum tok
 parse_err(struct parse *p)
 {
+	va_list	ap;
 	int	 	 er = errno;
 	struct pos	 pos;
 
@@ -355,7 +356,7 @@ parse_err(struct parse *p)
 	pos.column = p->column;
 
 	ort_config_msgv(p->cfg, MSGTYPE_FATAL, 
-		channel, er, &pos, NULL, NULL);
+		channel, er, &pos, NULL, ap);
 
 	p->lasttype = TOK_ERR;
 	return p->lasttype;
@@ -378,7 +379,7 @@ parse_errx(struct parse *p, const char *fmt, ...)
 		va_end(ap);
 	} else
 		ort_config_msgv(p->cfg, MSGTYPE_ERROR, 
-			channel, 0, &pos, NULL, NULL);
+			channel, 0, &pos, NULL, ap);
 
 	p->lasttype = TOK_ERR;
 	return p->lasttype;
