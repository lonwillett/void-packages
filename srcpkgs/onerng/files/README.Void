=== Important notes and caveats ===

This file is valid as of 2017-09-09. Be cautious if things have
changed since then.

This assumes that you are using the version of "rngd" from the
"rng-tools" package in the standard Void repositories. If you want to
use a different version, then something similar probably applies, but
I can't vouch for the details. If you want to use something entirely
different, then this can probably be managed by tweaking some
parameters in "/etc/sv/onerng/run", but this is not something that is
explicitly supported.


=== Quick and easy configuration ===

Just run (as root) the script:

   /usr/share/onerng/setup-rngd-onerng

This will rewrite the /etc/sv/rngd/conf file, create or remove the
file /etc/sv/rngd/down, and enable the rngd and onerng services.

You may need to unplug and plug in your OneRNG device (or take some
equivalent action), if it was already plugged in when the "onerng"
package was installed.

This is all. Read on if you want more information, or want to control
the configuration in detail.


=== Detailed configuration guide ===

In order to use a OneRNG device with this package, you need to take
the following steps:

 -- Configure the "rngd" service to use "/run/hwrng" as its entropy
    source. The way to do this is to include "-r /run/hwrng" in the
    value of RNGD_OPTS set in the file /etc/sv/rngd/conf.

 -- The version of rngd in the void repositories will automatically
    try to use the "drng" random number generator that is available on
    most modern x86 computers. If you want to disable this behaviour,
    then include "-d 1" in RNGD_OPTS.

    If "rdrand" is in the flags from /proc/cpuinfo, then drng should
    work.  You can use the command "rngd -v -f -n 1 -r /none" to
    verify this.

 -- The version of rngd in the void repositories also tries using the
    TPM random number generator, if it is available. If you want to
    disable this behaviour, then include "-n 1" in RNGD_OPTS. Please
    note that there are a lot of dodgy implementations of TPM out
    there, so errors may be generated by rngd's attempts to use it.

    If /dev/tpm0 is not present on your machine, then you don't have a
    TPM RNG. If it is present, then the RNG may or may not work. You
    can try it out with the command "rngd -v -f -d 1 -r /none".

 -- If neither TPM nor DRNG is usable, then rngd's only source of
    entropy will be the OneRNG device. So it will fail to run when the
    OneRNG device is not available. But the service must still be
    enabled. So in this case, you should create the file
    "/etc/sv/rngd/down", to prevent runit from trying to start it up
    automatically. The "onerng" service will start it up when the
    device becomes available.

 -- If one or both of TPM and DRNG is usable, and you want them to be
    used even when the OneRNG device is not available, then the file
    /etc/sv/rngd/down should *not* be created. In this case, when the
    OneRNG device is not available, rngd will still collect entropy
    from its other sources, and provide it to the kernel. When the the
    OneRNG device becomes available, the onerng service will restart
    the rngd service, so it should then start using the device.

 -- The rngd service must be enabled, i.e. as root, run:

	ln -s /etc/sv/rngd /var/service/

 -- The onerng service must be enabled, i.e. as root, run:

	ln -s /etc/sv/onerng /var/service/

 -- You may also want to tweak the settings in the "conf" file in the
    "/etc/sv/onerng" directory.

 -- "udev" is used to get things going when you plug in the OneRNG
    device. This creates a problem if the device was already plugged
    in when you installed the software; in this case udev never did
    its stuff.

    To fix this, unplug the device and plug it back in after
    installing the software. If this is inconvenient, removing and
    reinserting the "cdc-acm" module will probably do the trick. In
    the worst case, a reboot will be required.


=== What is going on ===

This gives a quick overview of how the different components fit
together.

A couple of udev rules are registered (79-onerng.rules), so that when
a OneRNG device is plugged in, a symlink is created, and the onerng
service is started ("sv up onerng"). When the device is unplugged, the
onerng service is stopped ("sv down onerng").

The "onerng" service must be enabled, but it is not started
automatically by runit (it has a "down" file). It is only started and
stopped by udev.

When the service starts up, it does some device initialisation and
what-not, creates the symbolic link "/run/hwrng" pointing to the
device, and then starts (or restarts) the "rngd" service.

The "rngd" service needs to be configured to use "/run/hwrng" as a
source of entropy.

When the "onerng" service stops, it removes "/run/hwrng", and then
stops (or restarts) the "rngd" service.

For further details, see the scripts.
